#!/usr/bin/env node

/**
 * Module dependencies.
 */
require('dotenv-safe').config();
// To avoid manual effect for creating db function
require('./init');
const http = require('http');
const config = require('config');

const app = require('../app');
const logger = require('../utils/logger');

// Normalize a port into a number, string, or false.
const normalizePort = val => {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
};

// Get port from environment and store in Express.
const port = normalizePort(config.port || '3000');
app.set('port', port);

const server = http.createServer(app);

// Event listener for HTTP server "error" event.
const onError = error => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
};

server.listen(port);
server.on('error', onError);
server.on('listening', () => {
  logger.info('Server is running: http://localhost:8000 ðŸš€ ');
});
